<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.xlbs.apiservice.dao.imp.MenuDao">

    <sql id="entity">
        id as `key`,
        created_by as createdBy,
        created_date as createdDate,
        last_modify_by as lastModifyBy,
        last_modify_date as lastModifyDate
    </sql>

    <sql id="menuField">
        id as id,
        `name` as `name`,
        parent_id as parentId,
        `rank` as `rank`,
        url as url,
        is_enable as isEnable,
        icon as icon,
        `index` as `index`,
        <include refid="entity"/>
    </sql>

    <!--分页查询-->
    <select id="find" resultType="com.xlbs.apiservice.entity.Menu">
        select
          t1.id as id,
          t1.id as `key`,
          t1.`name` as `name`,
          t1.`name` as `title`,
          t1.parent_id as parentId,
          t1.`rank` as `rank`,
          t1.url as url,
          t1.is_enable as isEnable,
          t1.icon as icon,
          t1.`index` as `index`,
          t1.created_by as createdBy,
          t1.created_date as createdDate,
          t1.last_modify_by as lastModifyBy,
          t1.last_modify_date as lastModifyDate,
          t2.`name` as createdByName,
          t3.`name` as lastModifyByName
        from
          t_menu t1
        left join t_user t2 on t1.created_by = t2.id
        left join t_user t3 on t1.last_modify_by = t3.id
        <where>
            <if test="createdBy != null">
                and t1.created_by = #{createdBy}
            </if>
        </where>
        order by t1.is_home desc, t1.`rank` asc
    </select>

    <!--查询-->
    <select id="select" resultType="com.xlbs.apiservice.entity.Menu">
        select
          `name` as `title`,
          <include refid="menuField"/>
        from
          t_menu
        <where>
            <if test="id != null">
                and `id` = #{id}
            </if>
            <if test="rank != null">
                and `rank` = #{rank}
            </if>
            <if test="ids != null">
                and id in
                <foreach collection ="ids" item="id" open="(" separator="," close=")">
                    #{id}
                </foreach >
            </if>
            <if test="createdBy != null">
                and created_by = #{createdBy}
            </if>
        </where>
        order by is_home desc, `rank` asc
    </select>

    <!--保存-->
    <insert id="save" parameterType="com.xlbs.apiservice.entity.Menu">
        insert into t_menu
          (`name`,`parent_id`,`rank`,`url`,`is_enable`,created_by,created_date,last_modify_by,last_modify_date)
        values
          (#{name},#{parentId},#{rank},#{url},#{isEnable},#{createdBy},#{createdDate},#{lastModifyBy},#{lastModifyDate})
    </insert>

    <!--更新-->
    <update id="update" parameterType="com.xlbs.apiservice.entity.Menu">
        update t_menu
        <set>
            <if test="name != null">
                `name` = #{name},
            </if>
            <if test="parentId != null">
                `parent_id` = #{parentId},
            </if>
            <if test="rank != null">
                `rank` = #{rank},
            </if>
            <if test="url != null">
                `url` = #{url},
            </if>
            <if test="isEnable != null">
                `is_enable` = #{isEnable},
            </if>
            <if test="lastModifyBy != null">
                last_modify_by = #{lastModifyBy},
            </if>
            <if test="lastModifyDate != null">
                last_modify_date = #{lastModifyDate}
            </if>
        </set>
        where id=#{id}
    </update>

    <!--删除-->
    <delete id="delete" >
        delete from t_menu where id=#{id} or parent_id=#{id}
    </delete>

    <!--通过用户ID查询该用户拥有的菜单-->
    <select id="findMenuByUserId" resultType="com.xlbs.apiservice.entity.Menu">
        select
          distinct menu.id,
          menu.name as name,
          menu.parent_id as parentId,
          menu.rank as `rank`,
          menu.url as url,
          menu.is_enable as isEnable,
          menu.icon as icon,
          menu.index as `index`,
          menu.created_by as createdBy,
          menu.created_date as createdDate,
          menu.last_modify_by as lastModifyBy,
          menu.last_modify_date as lastModifyDate
        from
          (select m.*
          from `t_user_role` ur
          left join `t_role_menu` rm on ur.`role_id` = rm.`role_id`
          left join `t_menu` m on rm.`menu_id` = m.`id`
          where ur.`user_id` = #{userId}
          and m.`is_enable` = 1) as menu
        order by menu.index
    </select>



</mapper>